                    CSS Selectors
- Style is an Object.
- Object keeps all related data and logic together.
- Object comprises of Keys and Values.
- Values are stored with reference of keys.
- CSS uses an object model called "CSSOM", which is used to set effects for elements.
- CSS object requires a selector to apply the given effects, when you are writing styles embedded or in external file.

Syntax:
        selector
        {
               key : value;
           key : value;
        }

- Selectors are categorized into various groups by developers.

    1. Primary Selectors
    2. Rational Selectors
    3. Structural Selectors
    4. Attribute Selectors
    5. Dynamic Classes
    6. Elements State Classes
    7. Validation State Classes
    8. Universal Selector
    9. Language Selector
    10. Root Selector etc..

Primary Selectors

1. Type Selector
 - It refers to element name.
          p, h1, table, div, span, form, input..

 - It is used for elements, when they need same style at every occurrence.
 - You can't ignore style at any specific occurrence.

Syntax:
        h1, p, table
        {

        }

2. ID Selectors
- Every element can use a unique ID.
- You can configure styles for ID using "#".
- You can select only the element, where you want to apply the styles.

Syntax:
           #effect
        {
        }

        <h1   id="effect">
        <p  id="effect">
        <img id="effect">

- Every element can refer to only one "ID".
- Hence you can't apply multiple categories of styles to one element using ID.

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        #text-effect
         {
            color:red;
            text-align: center;
         }
         #border-effect
         {
            border:2px dotted red;
            padding: 10px;
         }
         #bg-effect {
            background-color: yellow;
         }
    </style>
</head>
<body>
    <h1 id="text-effect">Web Technologies</h1>
</body>
</html>

3. Class Selector
 - Every element can use multiple classes.
 - Styles for class are defined by using ".name".
 - Classes are accessed by using "class" attribute.
 - A class can implement multiple categories of styles.
 - All styles are separated with blank space.

Syntax:
        .c1  {   }
        .c2  {   }
        .c3  {   }

        <div  class="c1 c2 c3">
        <div class="c2">
        <div class="c1 c3">
        <button class="btn btn-primary">
        <div class="bi bi-person">

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .text-effect
         {
            color:red;
            text-align: center;
         }
         .border-effect
         {
            border:2px dotted red;
            padding: 10px;
         }
         .bg-effect {
            background-color: yellow;
         }
    </style>
</head>
<body>
    <h1 class="border-effect text-effect bg-effect">Web Technologies</h1>
    <h1 class="border-effect text-effect">HTML</h1>
    <h1 class="bg-effect text-effect">CSS</h1>
</body>
</html>

FAQ: If styles are defined for element using ID, Class and Type then which set will apply?
Ans:
    a) If different attributes are defined then all will apply.
        b) If same attribute is defined then it uses priority

            1st Priority        ID selector
            2nd Priority        Class Selector
            3rd Priority        Type Selector

Note: You can group selectors by using "," as delimiter.

        h1, #text-style,  .bg-style  
        {

        }

        table, form {

        }

        .p1,  .bg-style {

        }

Rational Selectors:

            Child Selector            nav  span {  }
            Adjacent Selector        nav+span {  }
            Sibling Selector        nav~span {  }  [all siblings within the scope]


Attribute Selectors:
- You can define styles for elements based on the attribute and value they use.

Syntax:
   
        element[attribute]        It refers to all elements that have given attribute.

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
       p[id] {
         color:red;
       }
    </style>
</head>
<body>
        <p>HTML</p>
        <p>CSS</p>
        <p id="p3">JavaScript</p>
        <p>jQuery</p>
        <p id="p5">Node JS</p>
        <p>React JS</p>
</body>
</html>


        element[attribute=value]     It refers to all element that have Id matching with val.

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        input[type="button"] {
            background-color: yellow;
        }
    </style>
</head>
<body>
       <dl>
        <dt>User Name</dt>
        <dd><input type="text"></dd>
        <dt>Mobile</dt>
        <dd><input type="text"></dd>
       </dl>
       <input type="button" value="Login">
       <input type="button" value="Cancel">
</body>
</html>

Attribute Conditions:

          [attribute=value]            exact match
       
          [attribute$=value]            ends with

          [attribute^=value]            starts with
       
          [attribute|=value]            starts with and have "-" delimiter

          [attribute~=value]            Individual and separated with blank space

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
       p[class~="Effect"] {
         color:red;
       }
    </style>
</head>
<body>
      <p class="Effect">Para-1</p>
      <p class="ParaEffect">Para-2</p>
      <p class="TextEffectPara">Para-3</p>
      <p class="Para-Effect">Para-4</p>
      <p class="Effect-Para">Para-5</p>
      <p class="Text Effect Para">Para-6</p>
      <p class="Effect Para">Para-7</p>
      <p class="Para Effect">Para-8</p>
</body>
</html>





CSS Selectors
- Primary Selectors
- Rational Selectors
- Attribute Selectors
    ~=
    |=
    ^=
    $=

4. Dynamic Classes
    a) Element State Classes

            :hover
            :active
            :focus
            :target
            :checked
            :disabled
            :read-only
            :visited
   
    b) Validation State Classes

            :required
            :optional
            :valid
            :invalid
            :in-range
            :out-of-range

    c) Structural Classes

            :first-child
            :last-child
            :nth-child()            : level number, even or odd
            :nth-of-type()            : every nth occurrence starting from specified
            :nth-last-of-type()        : every nth occurrence from last.

Syntax:
       li:nth-child(4) {  }            => access 4th element
       li:nth-child(even){ }        => access even occurrences [2, 4, 6, 8..]
       li:nth-of-type(2n) { }        => every 2nd from top starting from 2nd.
       li:nth-of-type(2n+1) { }        => every 2nd from top starting from 1st
       li:nth-last-of-type(2n+1){ }    => every 2nd from bottom starting from last 1.


            ::before
            ::after
            ::selection
            ::placeholder
            ::first-letter
            ::first-line

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
       ul {
        list-style: none;
        display: flex;
        font-family: Arial;
       }
       li::after {
          content: " > ";
          padding-left: 10px;
          padding-right: 10px;
       }
    </style>
</head>
<body>
   <ul>
      <li> <span class="bi bi-house-door"></span> Home </li>
      <li> Mobiles & Accessories </li>
      <li> Mobiles </li>
      <li> Apple Mobile </li>
      <li> Apple iPhone  </li>
   </ul>
</body>
</html>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
       ul {
        list-style: none;
        display: flex;
        font-family: Arial;
       }
       li::before {
          content: " > ";
          padding-left: 10px;
          padding-right: 10px;
       }
       li:first-child::before {
          content: "  ";
       }
       p::first-letter {
          font-size: 30px;
          font-style: Arial;
          float: left;
       }
       p::selection {
          background-color: yellow;
          text-decoration: underline 2px solid red;
          font-family: Brush Script MT;
       }
       input::placeholder {
          background-color: yellow;
          color:red;
          padding: 10px;
       }
    </style>
</head>
<body>
    <input type="text" size="30" placeholder="Search Amazon.in">
   <ul>
      <li> <span class="bi bi-house-door"></span> Home </li>
      <li> Mobiles & Accessories </li>
      <li> Mobiles </li>
      <li> Apple Mobile </li>
      <li> Apple iPhone  </li>
   </ul>
   <p>
    Lorem ipsum dolor sit amet consectetur adipisicing elit. Aliquam ipsum dolorem saepe in officia distinctio cum quasi impedit consectetur laudantium sapiente quidem assumenda nobis a, autem, delectus explicabo sunt quae!
    Lorem ipsum dolor sit amet consectetur adipisicing elit. At officia quis, quos id illum aliquam corporis libero maxime. Tempora adipisci pariatur accusamus, ea laudantium id? Harum atque ab nostrum praesentium.
    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Est ad doloremque quisquam officiis suscipit, impedit, eligendi quaerat debitis inventore et odio architecto quam! Aperiam totam dolor accusamus quod exercitationem facilis.
   </p>
</body>
</html>

5. Universal Selector

    * {

     }
