CSS Keyframes
- Animations are created by using frames.
- Keyframe contains element with transformation.
- Keyframe is configured using @keyframes directive

Syntax:
    @keyframes      name
    {
             from {
         }
         break_point {
         }
         to {
         }
    }

- From refers to initial state.
- To refers to final state.
- Break point can be from 1% to 100%.
- Keyframes are applied to any element by using CSS animation properties.

            animation-name                Keyframe Name
            animation-duration                Total time taken to transform
            animation-delay                Time taken to start
            animation-iteration-count        Number of time to repeat
            animation-direction                Alternate / Reverse
            animation-timing-function        Pre-defined functions

Syntax:
     selector {
        animation-name : keyframeName;
        animation-duration: 5s;
        animation-delay:1s;
        animation-iteration-count: 3 | infinite;
        animation-direction: reverse;    
        animation-timing-function: steps(), ease-in, ..;
      }

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
        body {
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }
     
        @keyframes  Blink
        {
            from {
                opacity: 0;
                font-size: 20px;
                transform: rotate(0deg) translateY(0px);
            }
            to {
                opacity: 1;
                font-size: 100px;
                transform: rotate(360deg) translateY(50px);
            }
        }
        .bi-star-fill {
            animation-name: Blink;
            animation-duration: 500ms;
            animation-iteration-count: infinite;
        }
    </style>
</head>
<body>
    <div class="bi bi-star-fill"></div>
</body>
</html>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
        body {
            overflow: hidden;
        }
        @keyframes Slide {
            from {
                transform: translateX(120%);
            }
            20% {
                transform: translateX(0%);
            }
            50% {
                transform: translateX(0%);
            }
            90% {
                transform: translateX(0%);
            }
            to {
                transform: translateX(-120%);
            }
        }
        img {
            animation-name: Slide;
            animation-duration: 5s;
            animation-iteration-count: infinite;
        }
    </style>
</head>
<body>
    <img src="../public/images/slide-1.JPG" width="100%">
</body>
</html>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
        @keyframes Spin {
            from {
                transform:rotate(0deg);
            }
            to {
                transform: rotate(360deg);
            }
        }
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
       .spinner {
          border-left: 20px solid black;
          border-right: 20px solid black;
          border-top: 20px solid black;
          border-bottom: 20px solid transparent;
          width: 200px;
          height: 200px;
          border-radius: 200px;
          animation-name: Spin;
          animation-duration: 1s;
          animation-iteration-count: infinite;
          animation-timing-function: linear;
       }
    </style>
</head>
<body>
    <div class="spinner"></div>
</body>
</html>

Ex:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
        @keyframes ColorShade {
             from {
                background-color: rgb(255, 219, 219);
                border-radius: 0px;
             }
             50% {
                background-color: rgb(233, 230, 31);
             }
             to {
                background-color: rgb(233, 31, 31);
                border-radius: 20px;
             }
        }
       button {
          animation-name: ColorShade;
          animation-duration: 2s;
          animation-iteration-count: infinite;
          animation-timing-function: cubic-bezier(0.445, 0.05, 0.55, 0.95);
          border:none;
       }
    </style>
</head>
<body>
    <button>Register</button>
</body>
</html>


Ex:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="../node_modules/bootstrap-icons/font/bootstrap-icons.css">
    <style>
       @keyframes spin {
          from {
            transform: rotateX(0deg);
          }
          to {
            transform: rotateX(180deg);
          }
       }

       @keyframes spinReverse {
          from {
            transform: rotate(0deg);
          }
          to {
            transform: rotate(360deg);
          }
       }
       .w {
          animation-name: spin;
          animation-duration: 2s;
          animation-iteration-count: infinite;
          display: inline-block;
       }
       .e {
          animation-name: spinReverse;
          animation-duration: 2s;
          animation-iteration-count: infinite;
          animation-direction: reverse;
          display: inline-block;
       }
    </style>
</head>
<body>
    <span class="w">W</span>
    <span class="e">E</span>
</body>
</html>

                         https://cssloaders.github.io/

- CSS transforms and animations have browser dependency issues.
- Developers have to use various plugins to run of different browsers

            -webkit
            -moz
            -o
            -ms

Syntax:
        button {
               -webkit-transform : scale(1.4);
               -moz-transform : scale(1.4);
               -o-transform: scale(1.4);
               -ms-transform : scale(1.4);
               transform : scale(1.4);
        }
